/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ViewControllers;

import Managers.BaseProductManager;
import Entities.BaseProduct;
import Entities.Customer;
import Entities.FinalProduct;
import Entities.Topping;
import Helpers.Size;
import Managers.BaseProductManagerImplementation;
import Managers.FinalProductManager;
import Managers.FinalProductManagerImplementation;
import Managers.ToppingManager;
import Managers.ToppingManagerImplementation;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import javax.swing.JButton;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class SalesModule extends javax.swing.JFrame {

    /**
     * Creates new form Sales
     */
    public SalesModule() {
        initComponents();
        BaseProductManager baseProductManager = new BaseProductManagerImplementation();
        List baseProductsList = baseProductManager.getAll();
        int i = 0;
        Iterator<BaseProduct> iterator = baseProductsList.iterator();
        while (iterator.hasNext()) {
            BaseProduct currentBase = iterator.next();
            m_baseProductComboBox.addItem(currentBase.getName());
        }
        
        m_productSizeComboBox.addItem(Size.SMALL);
        m_productSizeComboBox.addItem(Size.MEDIUM);
        m_productSizeComboBox.addItem(Size.LARGE);
        
        ToppingManager toppingManager = new ToppingManagerImplementation();
        List toppingsList = toppingManager.getAll();
        m_firstToppingComboBox.setVisible(true);
        m_secondToppingComboBox.setVisible(true);
        m_thirdToppingComboBox.setVisible(true);
        m_fourthToppingComboBox.setVisible(false);
        m_fifthToppingComboBox.setVisible(false);
        List toppingList = toppingManager.getAll();
        Iterator<Topping> toppingIterator = toppingList.iterator();
        while (toppingIterator.hasNext()) {
            Topping currentTopping = toppingIterator.next();
            m_baseProductComboBox.addItem(currentTopping.getName());
            m_firstToppingComboBox.addItem(currentTopping.getName());
            m_secondToppingComboBox.addItem(currentTopping.getName());
            m_thirdToppingComboBox.addItem(currentTopping.getName());
            m_fourthToppingComboBox.addItem(currentTopping.getName());
            m_fifthToppingComboBox.addItem(currentTopping.getName());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        m_baseProductComboBox = new javax.swing.JComboBox();
        m_productSizeComboBox = new javax.swing.JComboBox();
        m_secondToppingComboBox = new javax.swing.JComboBox();
        m_firstToppingComboBox = new javax.swing.JComboBox();
        m_thirdToppingComboBox = new javax.swing.JComboBox();
        m_otherProductButton = new javax.swing.JButton();
        m_fourthToppingComboBox = new javax.swing.JComboBox();
        m_extraTopping = new javax.swing.JButton();
        m_baseProductAddButton = new javax.swing.JButton();
        m_otherProductsComboBox = new javax.swing.JComboBox();
        m_completeSaleButton = new javax.swing.JButton();
        m_fifthToppingComboBox = new javax.swing.JComboBox();
        m_searchBaseProduct = new javax.swing.JButton();
        m_searchOtherProduct = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        m_productTable = new javax.swing.JTable();
        m_subTotalLabel = new javax.swing.JLabel();
        m_discountPercentageLabel = new javax.swing.JLabel();
        m_TotalLabel = new javax.swing.JLabel();
        m_subTotalField = new javax.swing.JTextField();
        m_discountPercentageField = new javax.swing.JTextField();
        m_totalField = new javax.swing.JTextField();
        m_percentageLabel = new javax.swing.JLabel();
        m_discountCashLabel = new javax.swing.JLabel();
        m_discountCashField = new javax.swing.JTextField();
        m_deleteProductButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        m_baseProductComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_productSizeComboBox.setModel(new javax.swing.DefaultComboBoxModel());
        m_productSizeComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                m_productSizeComboBoxItemStateChanged(evt);
            }
        });

        m_secondToppingComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_firstToppingComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_thirdToppingComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_otherProductButton.setText("Agregar Producto");

        m_fourthToppingComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_extraTopping.setText("Agregar Topping Extra");
        m_extraTopping.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_extraToppingActionPerformed(evt);
            }
        });

        m_baseProductAddButton.setText("Agregar el Producto");
        m_baseProductAddButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_baseProductAddButtonActionPerformed(evt);
            }
        });

        m_otherProductsComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_completeSaleButton.setText("Guardar Venta");
        m_completeSaleButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_completeSaleButtonActionPerformed(evt);
            }
        });

        m_fifthToppingComboBox.setModel(new javax.swing.DefaultComboBoxModel());

        m_searchBaseProduct.setText("O.");

        m_searchOtherProduct.setText("O.");

        m_productTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Descripci√≥n", "Precio"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(m_productTable);

        m_subTotalLabel.setText("Subtotal");

        m_discountPercentageLabel.setText("Descuento");

        m_TotalLabel.setText("Total");

        m_subTotalField.setText("0");

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, m_subTotalField, org.jdesktop.beansbinding.ELProperty.create("false"), m_subTotalField, org.jdesktop.beansbinding.BeanProperty.create("editable"));
        bindingGroup.addBinding(binding);

        m_discountPercentageField.setText("0");
        m_discountPercentageField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                m_discountPercentageFieldKeyReleased(evt);
            }
        });

        m_totalField.setText("0");
        m_totalField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                m_totalFieldKeyReleased(evt);
            }
        });

        m_percentageLabel.setText("%");

        m_discountCashLabel.setText("Descuento en pesos");

        m_discountCashField.setText("0");
        m_discountCashField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                m_discountCashFieldKeyReleased(evt);
            }
        });

        m_deleteProductButton.setText("Eliminar Producto Seleccionado");
        m_deleteProductButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_deleteProductButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(m_discountPercentageLabel)
                            .addComponent(m_subTotalLabel)
                            .addComponent(m_TotalLabel)
                            .addComponent(m_discountCashLabel))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(m_discountCashField, javax.swing.GroupLayout.DEFAULT_SIZE, 114, Short.MAX_VALUE)
                            .addComponent(m_totalField)
                            .addComponent(m_discountPercentageField)
                            .addComponent(m_subTotalField)))
                    .addComponent(m_completeSaleButton, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(m_searchBaseProduct)
                                .addComponent(m_searchOtherProduct, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(m_otherProductsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(m_otherProductButton))
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(m_baseProductComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(m_productSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(m_firstToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(m_thirdToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(m_secondToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                            .addComponent(m_fourthToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addComponent(m_fifthToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(m_baseProductAddButton))
                                        .addGroup(layout.createSequentialGroup()
                                            .addGap(30, 30, 30)
                                            .addComponent(m_extraTopping))))))
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 743, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(m_deleteProductButton)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(m_percentageLabel)
                .addGap(112, 112, 112))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(m_searchBaseProduct)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(m_firstToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m_thirdToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m_fifthToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m_baseProductAddButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(m_secondToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m_fourthToppingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(m_extraTopping)))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(m_baseProductComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(m_productSizeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_otherProductsComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_searchOtherProduct)
                    .addComponent(m_otherProductButton))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_subTotalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_subTotalLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_deleteProductButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_discountPercentageField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_percentageLabel)
                    .addComponent(m_discountPercentageLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_discountCashField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_discountCashLabel))
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(m_totalField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(m_TotalLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 42, Short.MAX_VALUE)
                .addComponent(m_completeSaleButton)
                .addContainerGap())
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    public void addProductToTable(int id){
        DefaultTableModel tableModel = (DefaultTableModel) m_productTable.getModel();
        FinalProductManager finalProductManager = new FinalProductManagerImplementation();
        List finalProductList = finalProductManager.searchById(id);
        String[] rowToAdd = new String[ROW_ELEMENTS];
        Iterator<FinalProduct> finalProductIterator = finalProductList.iterator();
        FinalProduct finalProductToAdd = finalProductIterator.next();
        BaseProductManager baseProductManager = new BaseProductManagerImplementation();
        List<BaseProduct> baseProductList = baseProductManager.searchById(finalProductToAdd.getBaseProductId());
        Iterator<BaseProduct> baseProductIterator = baseProductList.iterator();
        BaseProduct baseProductToAdd = baseProductIterator.next();
        rowToAdd[0] = baseProductToAdd.getName();
        rowToAdd[1] = String.valueOf(finalProductToAdd.getPrice());
        tableModel.addRow(rowToAdd);
        calculateDiscounts();  
    }
    
    
    private void calculateDiscounts(){
        m_subTotalField.setText(String.valueOf(calculateSubTotal()));  
        boolean isZeroDiscountPercentage = Double.parseDouble(m_discountPercentageField.getText()) == 0;
        boolean isZeroDiscountCash = Double.parseDouble(m_discountCashField.getText()) == 0;
        if(isZeroDiscountPercentage && isZeroDiscountCash){
            double subTotal = calculateSubTotal();
            m_totalField.setText(String.valueOf(subTotal));
        } else {
            if(isDiscountInPercentage){
                setTotalsWithPercentageDiscountField();
            } else {
                if(isDiscountInCash){
                    setTotalsWithCashDiscountField();
                } else {
                    //isDiscountWithTotalField
                    setDiscounts();
                }
            }
        }
    }
    
    
    private void setDiscounts(){
        double saleTotal = Double.parseDouble(m_totalField.getText());
        double saleSubTotal = calculateSubTotal();
        double cashDiscount = saleSubTotal - saleTotal;
        m_discountCashField.setText(String.valueOf(cashDiscount));
        setTotalsWithCashDiscountField();
    }
    
    private void setTotalsWithPercentageDiscountField(){
        double currentPercentageDiscount = Double.parseDouble(m_discountPercentageField.getText());
        double saleTotalCuantity = calculateTotalWithDiscountPercentageField(currentPercentageDiscount);
        m_totalField.setText(String.valueOf(saleTotalCuantity));
        double cashDiscountCuantity = calculateDiscountCash(currentPercentageDiscount);
        m_discountCashField.setText(String.valueOf(cashDiscountCuantity));
    }
  
    private void setTotalsWithCashDiscountField(){
        double currentCashDiscount = Double.parseDouble(m_discountCashField.getText());
        double discountPercentage = calculateDiscountPercentage(currentCashDiscount);
        m_discountPercentageField.setText(String.valueOf(discountPercentage));
        double saleTotal = calculateSubTotal() - currentCashDiscount;
        m_totalField.setText(String.valueOf(saleTotal));
    }
    
    
    private double calculateDiscountPercentage(double cashDiscountCuantity){
        double total =((cashDiscountCuantity) * PERCENTAGE) / calculateSubTotal();
        return total; 
    }
    
    private double calculateTotalWithDiscountPercentageField(double currentPercentageDiscount){
        double currentPercentageDiscountInDecimal = currentPercentageDiscount / PERCENTAGE;
        double subTotal = calculateSubTotal();
        double cashToDiscount = subTotal * currentPercentageDiscountInDecimal;
        double saleTotal = subTotal - cashToDiscount;
        return saleTotal;
    }
    
    
     private double calculateDiscountCash(double currentDiscount){
        double subTotal = calculateSubTotal();
        double saleWithDiscount = calculateTotalWithDiscountPercentageField(currentDiscount);
        double cashDiscounted = subTotal - saleWithDiscount;
        return cashDiscounted;
    }
     
     
    private double calculateSubTotal(){
        int currentProduct = 0;
        double subTotal = 0;
        for(currentProduct = 0; currentProduct < m_productTable.getRowCount(); currentProduct ++){
            String currentProductPrice = (String) m_productTable.getValueAt(currentProduct, PRICE_COLUMN);
            double productPrice = Double.parseDouble(currentProductPrice);
            subTotal = subTotal + productPrice;
        }
        return subTotal;
    }
    
    
    private void m_productSizeComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_m_productSizeComboBoxItemStateChanged
        Size selectedSize = (Size) m_productSizeComboBox.getSelectedItem();
        switch(selectedSize){
            case SMALL :
                m_firstToppingComboBox.setVisible(true);
                m_secondToppingComboBox.setVisible(true);
                m_thirdToppingComboBox.setVisible(true);
                m_fourthToppingComboBox.setVisible(false);
                m_fifthToppingComboBox.setVisible(false);
                break;
            case MEDIUM :
                m_firstToppingComboBox.setVisible(true);
                m_secondToppingComboBox.setVisible(true);
                m_thirdToppingComboBox.setVisible(true);
                m_fourthToppingComboBox.setVisible(true);
                m_fifthToppingComboBox.setVisible(false);
                break;
            case LARGE :
                m_firstToppingComboBox.setVisible(true);
                m_secondToppingComboBox.setVisible(true);
                m_thirdToppingComboBox.setVisible(true);
                m_fourthToppingComboBox.setVisible(true);
                m_fifthToppingComboBox.setVisible(true);
                break;
            default :
                m_firstToppingComboBox.setVisible(false);
                m_secondToppingComboBox.setVisible(false);
                m_thirdToppingComboBox.setVisible(false);
                m_fourthToppingComboBox.setVisible(false);
                m_fifthToppingComboBox.setVisible(false);
            }
    }//GEN-LAST:event_m_productSizeComboBoxItemStateChanged

    
    private void m_baseProductAddButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_baseProductAddButtonActionPerformed
//        Product productToAdd = createProduct();
//        addProductToTable(productToAdd);
    }//GEN-LAST:event_m_baseProductAddButtonActionPerformed

    
    private void m_extraToppingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_extraToppingActionPerformed
        this.setEnabled(false);
//        Product productToDecorate = createProduct();
//        ExtraTopping extraToppingWindow = new ExtraTopping(this, productToDecorate);
//        extraToppingWindow.setVisible(true);
    }//GEN-LAST:event_m_extraToppingActionPerformed

    private void m_completeSaleButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_completeSaleButtonActionPerformed
       //aceptar Venta
    }//GEN-LAST:event_m_completeSaleButtonActionPerformed

    private void m_discountCashFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_discountCashFieldKeyReleased
        setTotalsWithCashDiscountField();
        isDiscountInPercentage = false;
        isDiscountInCash = true;
    }//GEN-LAST:event_m_discountCashFieldKeyReleased

    private void m_discountPercentageFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_discountPercentageFieldKeyReleased
        setTotalsWithPercentageDiscountField();
        isDiscountInPercentage = true;
        isDiscountInCash = false;
    }//GEN-LAST:event_m_discountPercentageFieldKeyReleased

    private void m_totalFieldKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_m_totalFieldKeyReleased
        setDiscounts();
        isDiscountInPercentage = false;
        isDiscountInCash = false;
    }//GEN-LAST:event_m_totalFieldKeyReleased

    private void m_deleteProductButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_deleteProductButtonActionPerformed
        boolean isMoreThanOneProduct = m_productTable.getRowCount() > 1;
        if(isMoreThanOneProduct){
            DefaultTableModel tableModel = (DefaultTableModel) m_productTable.getModel();
            int rowToDelete = m_productTable.getSelectedRow();
            tableModel.removeRow(rowToDelete);
            calculateDiscounts();
        } else {
            boolean isOneProduct = m_productTable.getRowCount() == 1;
            if(isOneProduct){
                DefaultTableModel tableModel = (DefaultTableModel) m_productTable.getModel();
                int rowToDelete = m_productTable.getSelectedRow();
                tableModel.removeRow(rowToDelete);
                setFieldsToZero();
            } else {
                //no rows
            }
        }
    }//GEN-LAST:event_m_deleteProductButtonActionPerformed
    
    
    private void setFieldsToZero(){
        m_subTotalField.setText(String.valueOf(0));
        m_discountPercentageField.setText(String.valueOf(0));
        m_discountCashField.setText(String.valueOf(0));
        m_totalField.setText(String.valueOf(0));
    }
    
    
    private FinalProduct createProduct(){
      Size selectedSize = (Size) m_productSizeComboBox.getSelectedItem();
      FinalProductManager finalProductManager = new FinalProductManagerImplementation();
      BaseProductManager baseProductManager = new BaseProductManagerImplementation();
      String selectedBaseProduct = m_baseProductComboBox.getSelectedItem().toString();
        List<BaseProduct> baseProductsList = baseProductManager.searchByName(selectedBaseProduct);
        Iterator<BaseProduct> baseProductIterator = baseProductsList.iterator();
        BaseProduct baseProductSelected = baseProductIterator.next();
        int baseProductId = baseProductSelected.getId();
        
            
            
//        switch(selectedSize){
//            case SMALL :
//                double baseProductPrice = baseProductSelected.getSmallPrice();
//                FinalProduct finalProduct = new FinalProduct(baseProductId, baseProductPrice);
//                finalProductManager.add(finalProduct);
//                return m_baseProductManager.createSmallProduct(
//                            m_baseProductComboBox.getSelectedItem().toString(),
//                            m_firstToppingComboBox.getSelectedItem().toString(),
//                            m_secondToppingComboBox.getSelectedItem().toString(),
//                            m_thirdToppingComboBox.getSelectedItem().toString()
//                        );
//            case MEDIUM :
//                return m_baseProductManager.createMediumProduct(
//                            m_baseProductComboBox.getSelectedItem().toString(),
//                            m_firstToppingComboBox.getSelectedItem().toString(),
//                            m_secondToppingComboBox.getSelectedItem().toString(),
//                            m_thirdToppingComboBox.getSelectedItem().toString(),
//                            m_fourthToppingComboBox.getSelectedItem().toString()
//                        );
//            case LARGE :
//                return m_baseProductManager.createLargeProduct(
//                            m_baseProductComboBox.getSelectedItem().toString(),
//                            m_firstToppingComboBox.getSelectedItem().toString(),
//                            m_secondToppingComboBox.getSelectedItem().toString(),
//                            m_thirdToppingComboBox.getSelectedItem().toString(),
//                            m_fourthToppingComboBox.getSelectedItem().toString(),
//                            m_fifthToppingComboBox.getSelectedItem().toString()
//                        );
//            default : 
//                return null;
//        }  
        return null;
   }
    
    
        
     /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesModule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesModule().setVisible(true);
            }
        });
    }
    
    private boolean isDiscountInCash;
    private boolean isDiscountInPercentage;
    private final int PERCENTAGE = 100;
    private final int PRICE_COLUMN = 1;
    private final int ROW_ELEMENTS = 2;
    //private BaseProductManager m_baseProductManager;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel m_TotalLabel;
    private javax.swing.JButton m_baseProductAddButton;
    private javax.swing.JComboBox m_baseProductComboBox;
    private javax.swing.JButton m_completeSaleButton;
    private javax.swing.JButton m_deleteProductButton;
    private javax.swing.JTextField m_discountCashField;
    private javax.swing.JLabel m_discountCashLabel;
    private javax.swing.JTextField m_discountPercentageField;
    private javax.swing.JLabel m_discountPercentageLabel;
    private javax.swing.JButton m_extraTopping;
    private javax.swing.JComboBox m_fifthToppingComboBox;
    private javax.swing.JComboBox m_firstToppingComboBox;
    private javax.swing.JComboBox m_fourthToppingComboBox;
    private javax.swing.JButton m_otherProductButton;
    private javax.swing.JComboBox m_otherProductsComboBox;
    private javax.swing.JLabel m_percentageLabel;
    private javax.swing.JComboBox m_productSizeComboBox;
    private javax.swing.JTable m_productTable;
    private javax.swing.JButton m_searchBaseProduct;
    private javax.swing.JButton m_searchOtherProduct;
    private javax.swing.JComboBox m_secondToppingComboBox;
    private javax.swing.JTextField m_subTotalField;
    private javax.swing.JLabel m_subTotalLabel;
    private javax.swing.JComboBox m_thirdToppingComboBox;
    private javax.swing.JTextField m_totalField;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}