/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package ViewControllers;

import Entities.Customer;
import Entities.Sale;
import Helpers.MessageDisplayManger;
import Helpers.MessageType;
import Managers.SaleManager;
import Managers.SaleManagerImplementation;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.Date;
import java.util.Iterator;
import java.util.List;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Asus
 */
public class ExpenseEstatistics extends javax.swing.JFrame {

    /**
     * Creates new form ExpenseEstatistics
     */
    public ExpenseEstatistics() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        m_dateChooser = new com.toedter.calendar.JDateChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        m_expenseEstatisticsTable = new javax.swing.JTable();
        m_searchButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        m_expenseEstatisticsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Fecha", "Cliente", "Total"
            }
        ));
        jScrollPane1.setViewportView(m_expenseEstatisticsTable);

        m_searchButton.setText("Buscar");
        m_searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                m_searchButtonActionPerformed(evt);
            }
        });

        jLabel1.setText("Ventas del d√≠a");

        org.jdesktop.layout.GroupLayout layout = new org.jdesktop.layout.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(jScrollPane1, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, 388, Short.MAX_VALUE)
                    .add(layout.createSequentialGroup()
                        .add(m_dateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 170, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .add(m_searchButton))
                    .add(layout.createSequentialGroup()
                        .add(jLabel1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 122, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                        .add(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
            .add(layout.createSequentialGroup()
                .addContainerGap()
                .add(layout.createParallelGroup(org.jdesktop.layout.GroupLayout.LEADING)
                    .add(m_dateChooser, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, org.jdesktop.layout.GroupLayout.DEFAULT_SIZE, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                    .add(m_searchButton))
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED, 21, Short.MAX_VALUE)
                .add(jLabel1)
                .addPreferredGap(org.jdesktop.layout.LayoutStyle.RELATED)
                .add(jScrollPane1, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE, 253, org.jdesktop.layout.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void m_searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_m_searchButtonActionPerformed
        Date date = m_dateChooser.getDate();
        String dateString = convertCalendarDateToString(date);
        SaleManager saleManager = new SaleManagerImplementation();
        List<Sale> salesList = saleManager.getAll();
        Iterator<Sale> saleIterator = salesList.iterator();
        List<Sale> salesInDate = new ArrayList<Sale>();
        while(saleIterator.hasNext()){
            Sale currentSale = saleIterator.next();
            Date dateSale = currentSale.getDate();
            String convertUtilDateToString = convertUtilDateToString(dateSale);
            if(convertUtilDateToString.equalsIgnoreCase(dateString)){
                salesInDate.add(currentSale); 
            }
        }
        createTable(salesInDate);
    }//GEN-LAST:event_m_searchButtonActionPerformed

    private void createTable(List sales){
        DefaultTableModel model = this.createTableModel();
        if (sales == null) {
            this.m_expenseEstatisticsTable.setModel(model);
            MessageDisplayManger.showInformation(MessageType.NO_COSTUMER_FOUND, this);
            return;
        }

        String[] customerData = new String[4];
        Iterator<Sale> iterator = sales.iterator();
        while (iterator.hasNext()) {
            Sale sale = (Sale) iterator.next();
            customerData[COLUMN_ID_POSITION] = Integer.toString(sale.getId());
            customerData[COLUMN_DATE_POSITION] = sale.getDate().toString();
            customerData[COLUMN_CUSTOMER_POSITION] = Integer.toString(sale.getCustomerId());
            customerData[COLUMN_TOTAL_POSITION] = Double.toString(sale.getTotal());
            model.addRow(customerData);
        }
        this.m_expenseEstatisticsTable.setModel(model);
        this.rowSelectionProperties();
    }
    
    private void rowSelectionProperties() {
        this.m_expenseEstatisticsTable.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
        this.m_expenseEstatisticsTable.setCellSelectionEnabled(false);
        this.m_expenseEstatisticsTable.setRowSelectionAllowed(true);
    }
    
    private DefaultTableModel createTableModel() {
        DefaultTableModel model = new DefaultTableModel() {

            @Override
            public boolean isCellEditable(int row, int column) {
                return false;
            }
        };

        String[] columnNames = new String[4];
        columnNames[COLUMN_ID_POSITION] = ID;
        columnNames[COLUMN_DATE_POSITION] = DATE;
        columnNames[COLUMN_CUSTOMER_POSITION] = CUSTOMER;
        columnNames[COLUMN_TOTAL_POSITION] = TOTAL;

        model.setColumnIdentifiers(columnNames);

        return model;
    }
    
    private String convertUtilDateToString(Date date){
        String stringDate = date.toString();
        String[] splittedString = stringDate.split(SPACE_BAR);
        String datePartOfString = splittedString[0];
        return datePartOfString;
        
    }
    
    private String convertCalendarDateToString(Date date){
        String year = String.valueOf(date.getYear() + YEAR_CONSTANT);
        String dateString = year + SPACE;
        dateString = dateString + String.valueOf(date.getMonth() + MONTH_CONVERTER) + SPACE;
        Calendar calendar = m_dateChooser.getCalendar();
        int daySelected = calendar.get(DAY_FIELD);
        if(daySelected <= FIRST_9_NUMBERS){
            dateString = dateString + ZERO + String.valueOf(daySelected);
        } else {
            dateString = dateString + String.valueOf(daySelected);
        }
        
        return dateString;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ExpenseEstatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ExpenseEstatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ExpenseEstatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ExpenseEstatistics.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ExpenseEstatistics().setVisible(true);
            }
        });
    }
    
    
    private final static String SPACE_BAR = " ";
    private final static String ZERO = "0";
    private final static int MONTH_CONVERTER = 1;
    private final static int DAY_FIELD = 5;
    private final static int FIRST_9_NUMBERS = 9;
    private final static int YEAR_CONSTANT = 1900;
    private final static String SPACE = "-";
    private static final int COLUMN_ID_POSITION = 0;
    private static final int COLUMN_DATE_POSITION = 1;
    private static final int COLUMN_CUSTOMER_POSITION = 2;
    private static final int COLUMN_TOTAL_POSITION = 3;
    private static final String ID = "Id";
    private static final String DATE = "Fecha";
    private static final String CUSTOMER = "Cliente";
    private static final String TOTAL = "Total";
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.toedter.calendar.JDateChooser m_dateChooser;
    private javax.swing.JTable m_expenseEstatisticsTable;
    private javax.swing.JButton m_searchButton;
    // End of variables declaration//GEN-END:variables
}
